from manimlib.imports import *
import shapely.wkt as wkt
import json
import math

#lss = "LINESTRING (8.88 1608, 10.17 1608, 12.87 1608.3, 16.21 1608.57, 22.81 1608.95, 29.83 1609.28, 37.68 1609.6, 46.44 1609.93, 57.64 1610.3, 69.47 1610.58, 78.1 1610.53, 88.69 1610, 101.07 1608.4, 109.79 1606.6, 121.67 1603.4, 133.21 1599.42, 141.53 1596.05, 153 1590.92, 162.64 1586.1, 173.64 1582.12, 181.47 1582.13, 191.33 1582.33, 203.48 1582.91, 214.04 1583.51, 226.36 1584.2, 235.16 1584.7, 247.47 1585.34, 259.71 1585.5, 267.78 1584.42, 277.41 1581.02, 283.99 1576.41, 288.35 1571.68, 292.86 1563.76, 295.4 1556.06, 297.51 1547.87, 298.79 1543.07, 300.43 1536.84, 301.2 1533.72, 301.95 1530.37, 302.32 1528.2, 302.46 1527.36, 302.49 1527.13, 302.49 1527.13, 301.71 1526.92, 299.94 1526.49, 295.77 1525.49, 291.6 1524.5, 284.32 1522.91, 277.32 1521.58, 268.76 1520.02, 262.11 1518.81, 254.6 1517.47, 249.24 1516.51, 242.26 1515.26, 234.95 1513.97, 226.14 1512.74, 216.94 1511.92, 210.51 1511.45, 202.71 1510.79, 196.13 1510.21, 189.6 1509.66, 185.14 1509.89, 183.81 1511.07, 185.29 1513.16, 187.79 1515.08, 191.25 1517.3, 194.4 1519.28, 196.17 1520.35, 197.06 1520.86, 197.19 1520.93, 197.2 1520.93, 198.17 1521.49, 200.55 1521.88, 204.82 1521.88, 209.39 1521.88, 213.24 1521.88, 215.79 1521.88, 218.07 1521.88, 219.62 1521.88, 220.02 1521.88, 220.02 1521.88, 220.84 1521.88, 222.41 1521.91, 225.78 1523.02, 227.49 1523.7, 229.57 1524.58, 230.41 1525.01, 230.51 1525.06, 230.51 1525.06, 230.51 1525.06, 230.51 1525.06, 230.51 1525.06, 230.51 1525.06, 230.51 1525.06, 230.51 1525.06, 230.51 1525.06, 230.51 1525.06, 229.8 1525.84, 227.57 1528.09, 224.8 1530.78, 221.5 1533.49, 216.94 1536.37, 212.22 1537.2, 206.65 1535.7, 202.68 1534.41, 196.53 1532.74, 190.48 1531.14, 186.84 1530.21, 184.09 1529.68, 183.06 1530.54, 184.65 1533.3, 186.69 1536.05, 190.87 1541.22, 196.36 1547.59, 200.95 1552.77, 207.01 1559.48, 214.77 1568.02, 220.66 1574.43, 229.01 1583.5, 234.97 1589.97, 243.4 1599.03, 252.38 1607.49, 261.98 1613.04, 268.85 1614.87, 276.52 1614.89, 284.11 1612.4, 289.1 1608.38, 292.45 1603.14) "
lss = "LINESTRING (8 1672, 8.2 1670.4, 3.89 1669.92, 1.13 1668.45, -1.38 1668.87, -0.98 1667, 1.25 1665.37, 5.08 1664.72, 10.39 1663.91, 16.96 1662.88, 24.51 1661.55, 25.87 1660.02, 25.87 1657.78, 25.87 1655.55, 25.87 1652.71, 25.87 1649.09, 25.87 1644.51, 26 1637.89, 26.27 1631.38, 25.93 1624.1, 24.73 1617.95, 21.69 1608.52, 17.92 1603.05, 12.98 1598.99, 8.06 1596.51, 0.09 1594.27, -7.44 1593.32, -17.05 1593.18, -26.1 1593.76, -37.41 1595.15, -47.71 1596.82, -60.18 1597.51, -71.05 1596.8, -80.11 1595.43, -92.64 1592.69, -103.09 1589.81, -113.31 1586.52, -123.32 1583.08, -135.01 1579.1, -145.15 1577.17, -156.92 1578.48, -166.97 1580.88, -177.07 1584.16, -189.43 1588.13, -200.51 1591.53, -213.45 1595.5, -224.53 1598.91, -236.9 1602.93, -246.06 1605.64, -260.59 1608.83, -271.41 1610.55, -282.19 1611.87, -291.15 1612.7, -301.92 1613.73, -314.42 1614.61, -326.87 1615.11, -337.52 1615.23, -346.37 1615.19, -358.73 1614.87, -369.29 1614.42, -381.61 1613.86, -392.18 1613.36, -404.5 1612.72, -413.31 1612.22, -423.87 1611.62, -436.19 1610.83, -446.74 1610.14, -459.06 1609.33, -467.86 1608.75, -478.41 1608.06, -490.73 1607.21, -494.25 1606.93, -513.58 1605.06, -525.85 1603.64, -536.36 1602.41, -545.52 1601.3, -549.46 1600.83, -558.24 1599.87, -564.23 1599.11, -570.63 1598.1, -577.37 1596.93, -586.39 1595.22, -594.93 1593.53, -604.05 1591.83, -612.04 1590.42, -621.69 1588.73, -631.39 1587.04, -642.98 1585.07, -653.14 1583.39, -663.49 1581.7, -675.66 1579.74, -686.08 1578.06, -698.25 1576.09, -706.94 1574.69, -719.1 1572.73, -729.52 1571.04, -741.67 1569.08, -753.83 1567.12, -762.51 1565.72, -772.93 1564.04, -785.1 1562.08, -793.79 1560.67, -805.95 1558.71, -814.64 1557.31, -826.87 1555.34, -837.3 1553.65, -849.47 1551.59, -858.14 1549.92, -870.28 1547.22, -882.48 1544.05, -891.38 1541.61, -904.11 1537.96, -915.32 1534.52, -924.89 1531.43, -940.6 1526.06, -950.67 1522.36, -965.1 1516.5, -977.65 1510.85, -992.29 1503.53, -1004.83 1496.63, -1017.37 1489.16, -1031.44 1479.77, -1040.08 1472.46, -1050.44 1461.53, -1057.93 1452.01, -1064.38 1443.42, -1069.96 1435.5, -1075.31 1425.52) "

def diff(v,w):
     return (v[0] - w[0], v[1] - w[1]);

def dot(v,w):
    return v[0] * w[0] + v[1] * w[1]

def normalize(v):
    l = math.sqrt(v[0] * v[0] + v[1] * v[1])
    return (v[0]/l, v[1]/l)

def to_deg(rad):
    return (rad * 180.0) / math.pi  

def lr_sgn(v,w):
    if ( v[0] * w[1] - v[1] * w[0]) < 0:
        return -1.0
    else:
        return 1.0

def traj_to_curve(t):
    res = [0] * len(t)
    print(t)
    for i in range(1,len(t)-1):   
        print(i)
        v = t[i]
        last = t[i-1]
        v1 = diff(last, v)
        nex = t[i+1]
        v2 = diff(v, nex)
        
        v1 = normalize(v1)
        v2 = normalize(v2)
        
        value = dot(v1, v2)
        res[i] = to_deg( math.acos(value)*lr_sgn(v1, v2))
    return res

def make_traj(ls):
    b = ls.bounds
    print(b)
    sx = sz/(b[2]-b[0])
    sy = sz/(b[3]-b[1])
    data = [((c[0]-b[0])*sx, (c[1]-b[1])*sy) for c in ls.coords]
    return data


def set_background(self, fill_color="#FFFFFF"):
    background = Rectangle(
    width = FRAME_WIDTH,
    height = FRAME_HEIGHT,
    stroke_width = 0,
    fill_opacity = 1, fill_color=fill_color)
    self.add(background)

class IntroScene(Scene):
    def construct(self):
        tum = SVGMobject("./resources/tum_logo.svg",color="#3070B3")
        bgdm = Text(r"Big Geospatial Data Managment", color="black")
        bgdm_www = Text(r"https://www.bgd.lrg.tum.de/", color="#3070B3")
        bgdm_www.scale(0.75)
        tum.scale_in_place(1.5)
        
        #self.add(tum.to_edge(UP))
        bgdm.next_to(tum, direction=DOWN, aligned_edge=DOWN, buff=1)
        bgdm_www.next_to(bgdm, direction=DOWN, aligned_edge=DOWN, buff=0.25)
        x = VGroup(bgdm, bgdm_www)
        set_background(self)
        self.play(Write(tum))
        self.play(Write(x))
        self.wait(2)

class TrajConvertScene(Scene):
    def construct(self):
        gs = SequencePlot()
        self.play(gs)
        self.wait(2)

ls = wkt.loads(lss)
sz = 6
graph_timing=0.1
cutoff = 50

class SequencePlotTraj(GraphScene):
    def __init__(self, **kwargs):

        GraphScene.__init__(
            self,
            x_min=0,
            x_max=sz,
            y_min=0,
            y_max=sz,
            x_axis_height= sz,
            y_axis_height= sz,

            graph_origin = [-5,0,0],
            **kwargs
        )

    def construct(self):
        # data = [(1,1), (2,2), (3,2), (5,4), (3,4), (4,1), (2,3)]

        
        data = make_data(ls)[:cutoff][::-1]
        self.setup_axes()

        for i, dat in enumerate(data):
            s=self.coords_to_point(data[max(0,i-1)][0],data[max(0,i-1)][1])
            e=self.coords_to_point(dat[0],dat[1])


            dot = Dot().move_to(e)
            line = Line(start=s, end=e)
            x = VGroup(dot, line)
            self.play(Write(x), run_time=graph_timing)
        
        self.wait(3)

class SequencePlotDeriv(GraphScene):
    def __init__(self, **kwargs):

        GraphScene.__init__(
            self,
            x_min=-1,
            x_max=cutoff,
            y_min=-90,
            y_max=90,
            graph_origin = [-5,0,0],
            x_tick_frequency=5,
            y_tick_frequency=10,
            y_axis_label=r"$\alpha$",
            x_axis_label=r"$i$",
            **kwargs
        )

    def construct(self):
        # data = [(1,1), (2,2), (3,2), (5,4), (3,4), (4,1), (2,3)]
        data = traj_to_curve(ls.coords[:cutoff][::-1])
        print(data)
        print("UP", UP, "DOWN", DOWN, "LEFT", LEFT, "RIGHT", RIGHT, "ORIGIN", ORIGIN)
        
        self.setup_axes()

        for i, dat in enumerate(data):
            s=self.coords_to_point(max(0,i-1),data[max(0,i-1)])
            e=self.coords_to_point(i,dat)


            dot = Dot().move_to(e)
            line = Line(start=s, end=e)
            x = VGroup(dot, line)
            self.play(Write(x), run_time=graph_timing)
        
        self.wait(3)

